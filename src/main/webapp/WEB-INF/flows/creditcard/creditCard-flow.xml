<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/webflow
							http://www.springframework.org/schema/webflow/spring-webflow.xsd">

 	<var name="creditCard" class="com.packt.webstore.domain.CreditCard" />
 	<var name="creditCardAddressForm" class="com.packt.webstore.domain.form.CreditCardAddressForm" />
 	   <input name="homeAddress" type="com.packt.webstore.domain.Address" />
	   <input name ="shippingAddress" type="com.packt.webstore.domain.Address"/>
 
<!-- First "state" listed is first executed - unless <on-start> -->
   <decision-state id="verifyHome">
        <if test="homeAddress == null" then="cancelCheckout" else="getBillingAddress" />
    </decision-state>

	<view-state id="getBillingAddress" view="billingAddress.jsp" model="creditCardAddressForm">
<!-- pass Addresses to view based on attributes in view...-->
	 <on-render>
	 	<set name="requestScope.customerAddress" value="homeAddress"/>
	 	<set name="requestScope.shipAddress" value="shippingAddress"/>
	 </on-render>

 <!-- Helper method in Form determines which address we selected to use... -->
 		<transition on="billingAddressComplete" to="creditCardInfo" >
 			<evaluate expression="flowScope.creditCardAddressForm.determineAddress(homeAddress,shippingAddress)" />
 		</transition>
		<transition on="cancel" to="cancelCreditCard" />
	</view-state>
      
    <view-state id="creditCardInfo" view="creditCardInfo.jsp" model="creditCard">
 		<transition on="cardComplete" to="creditCardCompleted">
 <!-- Set the billing address in the newly filled in CC object -->
 		<evaluate expression="creditCard.setBillingAddress(creditCardAddressForm.getBillingAddress())"/>
 		 </transition>
		<transition on="cancel" to="cancelCreditCard" />
	</view-state>
    
    
    <end-state id="creditCardCompleted">
        <output name="creditCard" value="creditCard"/>
     </end-state>

	<end-state id="cancelCreditCard"  />		
	
<!-- 	<global-transitions>
		<transition on = "cancel" to="endState" />
	</global-transitions>
 -->
</flow>
